name: CI
on: 
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]
      

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        SURGE_LOGIN: ${{ secrets.SURGE_LOGIN}}
        SURGE_TOKEN: ${{ secrets.SURGE_TOKEN}}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - run: npm run format
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test coverage 
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage    
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder 
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - run: npm install -g surge
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build 
          zip -r coverage.zip ./coverage 
      - name:  Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx -p node@lts -c "npx semantic-release"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN}}
      - name: Deploy to Staging  
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain guarded-angle.surge.sh
      - name: Deploy to Production  
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge --project ./build --domain automatic-cook.surge.sh
      - name: Upload Coverage Reports  
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
      - name: Open Issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{github.repository}}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --data '{
            "title":"Automated issue for commit:${{
            github.sha}}"
            "body":"This is an automated issue created by workflow **${{github.workflow}}**
            \n\nThe commit hash was: _${{github.sha}}
            }_.",
            "assignes":["${{
            github.event.pull_request.user.login}}"]
            }'
